# –í–ê–ñ–õ–ò–í–û: –ù–µ –º–æ–∂–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—î—é `if`


# 1. –ü—Ä–∏–≤—ñ—Ç–∞—Ç–∏—Å—è —Ç–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ "Cucumber"
# 2. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏:
#   1. –°–ª–æ–≤–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –∑ –≤–µ–ª–∏–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏
#   2. –ß–∏ –≤—Å—ñ –ª—ñ—Ç–µ—Ä–∏, –æ–∫—Ä—ñ–º –ø–µ—Ä—à–æ—ó, –º–∞–ª–µ–Ω—å–∫—ñ
#   3. –ß–∏ –Ω–µ–º–∞ –∑–∞–π–≤–∏—Ö –ø—Ä–æ–±—ñ–ª—ñ–≤ —É —Ç–µ–∫—Å—Ç—ñ
#   4. –ß–∏ —Ü–µ —Å–∞–º–µ —Å–ª–æ–≤–æ Cucumber, –∞ –Ω–µ —â–æ—Å—å —ñ–Ω—à–µ
# 3. –£ —Ä–∞–∑—ñ –ø–æ—Ä—É—à–µ–Ω–Ω—è –±—É–¥—å-—è–∫–æ—ó –∑ –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫, –æ–±—É—Ä–∏—Ç–∏—Å—å —Ç–∞ –≤–∏–≤–µ—Å—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø–æ–º–∏–ª–∫—É
# –∑ —Ç–µ–∫—Å—Ç–æ–º —è–∫–∏–π –∑—Ä–æ–∑—É–º—ñ–ª–æ –æ–ø–∏—Å—É—î –π–æ–º—É –ø—Ä–æ–±–ª–µ–º—É.
# _–ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤—ñ–≤ cucumber –≤–∏–≤–µ—Å—Ç–∏ –ø–æ–º–∏–ª–∫—É –ø—Ä–æ —Ç–µ —â–æ —Å–ª–æ–≤–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –∑ –º–∞–ª–µ–Ω—å–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏._
# 4. –£ —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ "Cucumber" —â–µ —Ä–∞–∑.
# –£ —ñ–Ω—à–æ–º—É —Ä–∞–∑—ñ - –ø–æ–¥—è–∫—É–≤–∞—Ç–∏ —Ç–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É.


COME_I_BELIVE = '–î–∞–≤–∞–π, —è –≤ —Ç–µ–±–µ –≤—ñ—Ä—é: '


def intro_cucumber():
    print("–ü—Ä–∏–≤—ñ—Ç! –ú–µ–Ω—ñ –¥—É–∂–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω Cucumber –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑, –≤–≤–µ–¥–∏ –º–µ–Ω—ñ Cucumber –±—É–¥—å –ª–∞—Å–∫–∞!\n"
          "–ê–ª–µ –±—É–¥—å —É–≤–∞–∂–Ω–∏–º, –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–æ –≤–∞–∂–ª–∏–≤–æ —â–æ–± Cucumber –≥–∞—Ä–Ω–∏–π —Ç–∞ –±–µ–∑ –ø–æ–º–∏–ª–æ–∫!")


def check_cucumber():
    str_cucumber = input(COME_I_BELIVE)

    # 1. –°–ª–æ–≤–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –∑ –≤–µ–ª–∏–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏
    assert str_cucumber[0].isupper(), '–©–æ –Ω—ñ! –ù—É —Ö—Ç–æ –∂ —Ç–∞–∫ —Ä–æ–±–∏—Ç—å! –¢–≤—ñ–π Cucumber –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ –º–∞–ª–µ–Ω—å–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏, –≤–∏–ø—Ä–∞–≤–ª—è–π —à–≤–∏–¥–µ–Ω—å–∫–æ üò°'

    # 2. –ß–∏ –≤—Å—ñ –ª—ñ—Ç–µ—Ä–∏, –æ–∫—Ä—ñ–º –ø–µ—Ä—à–æ—ó, –º–∞–ª–µ–Ω—å–∫—ñ
    assert str_cucumber == str_cucumber.capitalize(), '–©–æ –∑–∞ –∫—Ä–∏–≤–∏–π Cucumber? –ê –Ω—É –≤–∏—Ä—ñ–≤–Ω—é–π! üò°'

    # 3. –ß–∏ –Ω–µ–º–∞ –∑–∞–π–≤–∏—Ö –ø—Ä–æ–±—ñ–ª—ñ–≤ —É —Ç–µ–∫—Å—Ç—ñ
    assert str_cucumber.find(' ') == -1, '–©–æ—Å—å —è –Ω–µ –ø–∞–º º—è—Ç–∞—é —â–æ–± —É Cucumber –±—É–ª–∏ –ø—Ä–æ–±—ñ–ª–∏. –ë—É–¥—É –≤–≤–∞–∂–∞—Ç–∏ —â–æ —Ü–µ –≤–∏–ø–∞–¥–∫–æ–≤—ñ—Å—Ç—å... üò°'

    # 4. –ß–∏ —Ü–µ —Å–∞–º–µ —Å–ª–æ–≤–æ Cucumber, –∞ –Ω–µ —â–æ—Å—å —ñ–Ω—à–µ
    assert str_cucumber.lower() == 'cucumber', '–¢—É—Ç –≤–∑–∞–≥–∞–ª—ñ –Ω–µ–º–∞ Cucumber! üò°'

    return str_cucumber


def well_done_cucumber(str_cucumber):
    print(f'{str_cucumber}!!! –í—ñ–¥–º—ñ–Ω–Ω–æ! –î—É–∂–µ –¥—è–∫—É—é! –¢–∏, –±—É–∫–≤–∞–ª—å–Ω–æ, –≤—Ä—è—Ç—É–≤–∞–≤ –≤—Å–µ—Å–≤—ñ—Ç üòä! ')


def start_cucumber():
    str_cucumber = ''
    intro_cucumber()

    try:
        str_cucumber = check_cucumber()
        well_done_cucumber(str_cucumber)
    except AssertionError as error:
        print(error)

    try:
        str_cucumber = check_cucumber()
        well_done_cucumber(str_cucumber)
    except AssertionError as error:
        print(error)
        print("\n–í —Ç–µ–±–µ –Ω–µ –≤–∏—à–ª–æ. –î—è–∫—É—é")


start_cucumber()